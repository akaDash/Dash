"prefix": "-"
"name": "Alpha"

import java.io.*;
import java.awt.*;
import java.awt.datatransfer.*;
import java.awt.event.*;


public class ClipMe extends Frame 
 implements ActionListener {

  private TextField tf;
  private TextArea ta;

  public static void main(String[] args) {
    new ClipMe().show();
  }

  public ClipMe() {

    super("Clipping Example");
    add(tf = new TextField("Welcome"), "North");
    add(ta = new TextArea(), "Center");
    MenuBar mb = new MenuBar();
    mb.add(makeEditMenu());
    setMenuBar(mb);
    setSize(250, 250);
   
  }

     
  private Menu makeEditMenu() {

    Menu editMenu = new Menu("Edit");
    MenuItem mi = new MenuItem("Cut");
    mi.addActionListener(this);
    editMenu.add(mi);
    mi = new MenuItem("Copy");
    mi.addActionListener(this);
    editMenu.add(mi);
    mi = new MenuItem("Paste");
    mi.addActionListener(this);
    editMenu.add(mi);
    mi = new MenuItem("Clear");
    mi.addActionListener(this);
    editMenu.add(mi);

    return editMenu;

  }


  public void actionPerformed(ActionEvent evt) {

    Clipboard clipboard = getToolkit().getSystemClipboard();
    String cmd = evt.getActionCommand();
    if (cmd.equalsIgnoreCase("copy")) {
       StringSelection data = new StringSelection(tf.getText());
       clipboard.setContents(data, data);
    }
    else if (cmd.equalsIgnoreCase("clear")) {
      tf.setText("");
    } 
    else if (cmd.equalsIgnoreCase("paste")) {
      Transferable clipData = clipboard.getContents(this);
      String s;
      try {
        s = (String) (clipData.getTransferData(DataFlavor.stringFlavor));
      } 
      catch (Exception ex) {
        s = ex.toString();
      }
      ta.setText(s);
    }
    else if (cmd.equalsIgnoreCase("cut")) {
       StringSelection data = new StringSelection(tf.getText());
       clipboard.setContents(data, data);
       tf.setText("");
    }

  }

}
import java.util.Scanner;
import java.io.File;
import java.io.IOException;
public class DoPayroll {
    public static void main(String args[])
                                  throws IOException {
        Scanner diskScanner =
            new Scanner(new File("EmployeeInfo.txt"));
        for (int empNum = 1; empNum <= 3; empNum++) {
            payOneEmployee(diskScanner);
        }
        diskScanner.close();
    }
    static void payOneEmployee(Scanner aScanner) {
        Employee anEmployee = new Employee();
        anEmployee.setName(aScanner.nextLine());
        anEmployee.setJobTitle(aScanner.nextLine());
        anEmployee.cutCheck(aScanner.nextDouble());
        aScanner.nextLine();
    }/*
 * The pattern in Listing 8-2
 */
import java.util.Scanner;
import java.io.File;
import java.io.IOException;
class SomeClassName {
    public static void main(String args[]) 
                                  throws IOException {
        Scanner scannerName =
            new Scanner(new File("SomeFileName"));
        //Some code goes here
        scannerName.nextInt();
        scannerName.nextDouble();
        scannerName.next();
        scannerName.nextLine();
        //Some code goes here
        scannerName.close();
    }
/*
 * The pattern in Listing 8-2
 */
import java.util.Scanner;
import java.io.File;
import java.io.IOException;
class SomeClassName {
    public static void main(String args[]) 
                                  throws IOException {
        Scanner scannerName =
            new Scanner(new File("SomeFileName"));
        //Some code goes here
        scannerName.nextInt();
        scannerName.nextDouble();
        scannerName.next();
        scannerName.nextLine();
        //Some code goes here
        scannerName.close();
    }
<STYLE type="text;css">
.calcBtn
{
font-weight : bold/
width: 32px;
height: 32px;
}
</style>
<script language="JavaScript">
function Calculator_OnClick(keyStr)
{
var resultsField = document.calculator.calcResults;
switch (keyStr)
{
case "0":
case "1":
case "2":
case "3":
case "4":
case "5":
case "6":
case "7":
case "8":
case "9":
case "0":
case ".":
if ((this.lastOp==this.opClear) || (this.lastOp==this.opOperator))
{
resultsField.value = keyStr;
}
else
{
// ignore extra decimals
if ((keyStr!=".") || (resultsField.value.indexOf(".")<0))
{
resultsField.value += keyStr;
}
}
this.lastOp = this.opNumber;
break;
case "*":
case "/":
case "+":
case "-":
if (this.lastOp==this.opNumber)
this.Calc();
this.evalStr += resultsField.value + keyStr;
this.lastOp = this.opOperator;
break;
case "=":
this.Calc();
this.lastOp = this.opClear;
break;
case "c":
resultsField.value = "0";
this.lastOp = this.opClear;
break;
default:
alert("'" + keyStr + "' not recognized.");
}
}
function Calculator_Calc()
{
var resultsField = document.calculator.calcResults;
//alert("eval:"+this.evalStr+resultsField.value);
resultsField.value = eval(this.evalStr+resultsField.value);
this.evalStr = "";
}
function Calculator()
{
this.evalStr = "";
this.opNumber = 0;
this.opOperator = 1;
this.opClear = 2;
this.lastOp = this.opClear;
this.OnClick = Calculator_OnClick;
this.Calc = Calculator_Calc;
}
gCalculator = new Calculator();
</script>
-------------------------------------------------------------------------------
<form name="calculator">
<table border="2" cellpadding="4" cellspacing="0" bordercolor="#000000">
<tr>
<td>
<table border="0" cellpadding="2" cellspacing="0" width="100%">
<tr>
<td colspan="4">
<input type="text" name="calcResults" value="0" size="20" style="text-align: right"></td>
</tr>
<tr>
<td><input class="calcBtn" type="button" value=" C " name="calclear" onclick="gCalculator.OnClick('c')"></td>
<td></td>
<td> </td>
<td><input class="calcBtn" type="button" value=" = " name="calequal" onclick="gCalculator.OnClick('=')"></td>
</tr>
<tr>
<td><input class="calcBtn" type="button" value=" 7 " name="cal7" onclick="gCalculator.OnClick('7')" ondblclick="gCalculator.OnClick('7')"></td>
<td><input class="calcBtn" type="button" value=" 8 " name="cal8" onclick="gCalculator.OnClick('8')" ondblclick="gCalculator.OnClick('8')"> </td>
<td><input class="calcBtn" type="button" value=" 9 " name="cal9" onclick="gCalculator.OnClick('9')" ondblclick="gCalculator.OnClick('9')"> </td>
<td><input class="calcBtn" type="button" value=" / " name="caldiv" onclick="gCalculator.OnClick('/')"></td>
</tr>
<tr>
<td><input class="calcBtn" type="button" value=" 4 " name="cal4" onclick="gCalculator.OnClick('4')" ondblclick="gCalculator.OnClick('4')"> </td>
<td><input class="calcBtn" type="button" value=" 5 " name="cal5" onclick="gCalculator.OnClick('5')" ondblclick="gCalculator.OnClick('5')"> </td>
<td><input class="calcBtn" type="button" value=" 6 " name="cal6" onclick="gCalculator.OnClick('6')" ondblclick="gCalculator.OnClick('6')"> </td>
<td><input class="calcBtn" type="button" value=" * " name="calmul" onclick="gCalculator.OnClick('*')"></td>
</tr>
<tr>
<td><input class="calcBtn" type="button" value=" 1 " name="cal1" onclick="gCalculator.OnClick('1')" ondblclick="gCalculator.OnClick('1')"> </td>
<td><input class="calcBtn" type="button" value=" 2 " name="cal2" onclick="gCalculator.OnClick('2')" ondblclick="gCalculator.OnClick('2')"> </td>
<td><input class="calcBtn" type="button" value=" 3 " name="cal3" onclick="gCalculator.OnClick('3')" ondblclick="gCalculator.OnClick('3')"> </td>
<td><input class="calcBtn" type="button" value=" + " name="calplus" onclick="gCalculator.OnClick('+')"></td>
</tr>
<tr>
<td> </td>
<td><input class="calcBtn" type="button" value=" 0 " name="cal0" onclick="gCalculator.OnClick('0')" ondblclick="gCalculator.OnClick('0')"> </td>
<td><input class="calcBtn" type="button" value=" . " name="caldec" onclick="gCalculator.OnClick('.')"></td>
<td><input class="calcBtn" type="button" value=" - " name="calminus" onclick="gCalculator.OnClick('-')"></td>
</tr>
</table>
</td>
</tr>
</table>
</form>

article, aside, details, figcaption, figure, footer, header, main, menu, nav, section {
    display: block;
}
* {
    box-sizing: border-box;
}
user agent stylesheet
main {
    display: block;
}
body {
    word-wrap: break-word;
}
body {
    font-family: -apple-system,BlinkMacSystemFont,Segoe UI,Helvetica,Arial,sans-serif,Apple Color Emoji,Segoe UI Emoji;
    font-size: 14px;
    line-height: 1.5;
    color: #24292e;
    background-color: #fff;
}

html {
    font-family: sans-serif;
    -ms-text-size-adjust: 100%;
    -webkit-text-size-adjust: 100%;
}
user agent stylesheet
html {
    color: -internal-root-color;
     public String  getMimeType()
 public Class   getRepresentationClass()
 public String  getHumanPresentableName()
 public void    setHumanPresentableName(String humanPresentableName)
 public boolean equals(DataFlavor dataFlavor)
 public boolean isMimeTypeEqual(String mimeType)
 public final boolean isMimeTypeEqual(DataFlavor dataFlavor)
   element.style {
}
.page-template .site-main, .post-template .site-main {
    padding-bottom: 4vw;
    background: #fff;
}
.outer {
    position: relative;
    padding: 0 4vw;
}
.site-main {
    z-index: 12;
    -ms-flex-positive: 1;
    flex-grow: 1;
    margin-top: 80px;
}
*, *:before, *:after {
    box-sizing: inherit;
}
*, :after, :before {
    box-sizing: inherit;
}
user agent stylesheet
main {
    display: block;
}
html, body, div, span, applet, object, iframe, h1, h2, h3, h4, h5, h6, p, blockquote, pre, a, abbr, acronym, address, big, cite, code, del, dfn, em, img, ins, kbd, q, s, samp, small, strike, strong, sub, sup, tt, var, dl, dt, dd, ol, ul, li, fieldset, form, label, legend, table, caption, tbody, tfoot, thead, tr, th, td, article, aside, canvas, details, embed, figure, figcaption, footer, header, hgroup, menu, nav, output, ruby, section, summary, time, mark, audio, video {
    margin: 0;
    padding: 0;
    border: 0;
    font: inherit;
    font-size: 100%;
    vertical-align: baseline;
}
a, abbr, acronym, address, applet, article, aside, audio, big, blockquote, body, canvas, caption, cite, code, dd, del, details, dfn, div, dl, dt, em, embed, fieldset, figcaption, figure, footer, form, h1, h2, h3, h4, h5, h6, header, hgroup, html, iframe, img, ins, kbd, label, legend, li, mark, menu, nav, object, ol, output, p, pre, q, ruby, s, samp, section, small, span, strike, strong, sub, summary, sup, table, tbody, td, tfoot, th, thead, time, tr, tt, ul, var, video {
    margin: 0;
    padding: 0;
    border: 0;
    font: inherit;
    font-size: 100%;
    vertical-align: baseline;
}
body {
    overflow-x: hidden;
    color: var(--gray90);
    font-family: "Lato", sans-serif;
    font-size: 1.5rem;
    line-height: 1.6em;
    font-weight: 400;
    font-style: normal;
    letter-spacing: 0;
    text-rendering: optimizeLegibility;
    background: #fff;
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
    -moz-font-feature-settings: "liga" on;
    font-feature-settings: "liga1" on;
}
body {
    line-height: 1;
}
body {
    color: #0a0a23;
    font-family: Lato,sans-serif;
    font-size: 1.5rem;
    line-height: 1.6em;
    font-weight: 400;
    font-style: normal;
    letter-spacing: 0;
    text-rendering: optimizeLegibility;
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
    font-feature-settings: "liga1" on;
}
body {
    line-height: 1;
}
:root {
    --dark-blue: #002ead;
    --theme-color: #0a0a23;
    --gray90: #0a0a23;
    --gray85: #1b1b32;
    --gray80: #2a2a40;
    --gray75: #3b3b4f;
    --gray15: #d0d0d5;
    --gray10: #dfdfe2;
    --gray05: #eeeef0;
    --gray00: #fff;
    --header-height: 38px;
}
html {
    overflow-x: hidden;
    overflow-y: scroll;
    font-size: 62.5%;
    -webkit-tap-highlight-color: rgba(0, 0, 0, 0);
}
html {
    box-sizing: border-box;
    font-family: "Lato", sans-serif;
    -ms-text-size-adjust: 100%;
    -webkit-text-size-adjust: 100%;
}
html {
    overflow-y: scroll;
    font-size: 62.5%;
    -webkit-tap-highlight-color: rgba(0,0,0,0);
}
html {
    box-sizing: border-box;
    font-family: Lato,sans-serif;
    -ms-text-size-adjust: 100%;
    -webkit-text-size-adjust: 100%;
}
user agent stylesheet
html {
    color: -internal-root-color;
}
*, *:before, *:after {
    box-sizing: inherit;
}
*, :after, :before {
    box-sizing: inherit;
}
*, *:before, *:after {
    box-sizing: inherit;
}
*, :after, :before {
    box-sizing: inherit;
}
::selection {
    text-shadow: none;
    background: var(--dark-blue);
    color: var(--gray00);
}
::selection {
    text-shadow: none;
    background: #002ead;
    color: #fff;
}
import java.awt.datatransfer.Clipboard;
import java.awt.datatransfer.ClipboardOwner;
import java.awt.datatransfer.Transferable;
import java.awt.datatransfer.StringSelection;
import java.awt.datatransfer.DataFlavor;
import java.awt.datatransfer.UnsupportedFlavorException;
import java.awt.Toolkit;
import java.io.*;

public final class TextTransfer implements ClipboardOwner {

  /** Simple test harness. */
  public static void main(String...  args){
    TextTransfer textTransfer = new TextTransfer();

    //display what is currently on the clipboard
    log("Clipboard contains:" + textTransfer.getClipboardContents());

    //change the contents and then re-display
    textTransfer.setClipboardContents("blah, blah, blah");
    log("Clipboard contains:" + textTransfer.getClipboardContents());
  }

   /**
   * Empty implementation of the ClipboardOwner interface.
   */
   @Override public void lostOwnership(Clipboard clipboard, Transferable contents){
     //do nothing
   }

  /**
  * Place a String on the clipboard, and make this class the
  * owner of the Clipboard's contents.
  */
  public void setClipboardContents(String string){
    StringSelection stringSelection = new StringSelection(string);
    Clipboard clipboard = Toolkit.getDefaultToolkit().getSystemClipboard();
    clipboard.setContents(stringSelection, this);
  }

  /**
  * Get the String residing on the clipboard.
  *
  * @return any text found on the Clipboard; if none found, return an
  * empty String.
  */
  public String getClipboardContents() {
    String result = "";
    Clipboard clipboard = Toolkit.getDefaultToolkit().getSystemClipboard();
    //odd: the Object param of getContents is not currently used
    Transferable contents = clipboard.getContents(null);
    boolean hasTransferableText =
      (contents != null) &&
      contents.isDataFlavorSupported(DataFlavor.stringFlavor)
    ;
    if (hasTransferableText) {
      try {
        result = (String)contents.getTransferData(DataFlavor.stringFlavor);
      }
      catch (UnsupportedFlavorException | IOException ex){
        System.out.println(ex);
        ex.printStackTrace();
      }
    }
    return result;
  }
  
  private static void log(String msg) {
    System.out.println(msg);
  }
} 
:
>java -cp . TextTransfer
Clipboard contains:Java 

Clipboard contains:


>
Clipboard clipboard=Toolkit
   .getDefaultToolkit().getSystemClipboard();
System clipboard
Toolkit toolkit=Toolkit.getDefaultToolkit();Toolkit toolkit=Toolkit.getDefaultToolkit();
Toolkit toolkit=Toolkit.getDefaultToolkit();
Toolkit toolkit=Toolkit.getDefaultToolkit();
void setContents(Transferable contents,
   ClipboardOwner owner)
Transferable getContents(Object requestor)
<iframe id="kx-proxy-JdOfGRZW" src="https://cdn.krxd.net/partnerjs/xdi/proxy.3d2100fd7107262ecb55ce6847f01fa5.html#!kxcid=JdOfGRZW&amp;kxt=https%3A%2F%2Fwww.developer.com&amp;kxcl=cdn&amp;kxp=" style="display: none; visibility: hidden; height: 0; width: 0;"></iframe>
<iframe scrolling="no" frameborder="0" allowtransparency="true" src="https://platform.twitter.com/widgets/widget_iframe.2d991e3dfc9abb2549972ce8b64c5d85.html?origin=https%3A%2F%2Fwww.developer.com" title="Twitter settings iframe" style="display: none;"></iframe>
<iframe id="kx-proxy-JdOfGRZW" src="https://cdn.krxd.net/partnerjs/xdi/proxy.3d2100fd7107262ecb55ce6847f01fa5.html#!kxcid=JdOfGRZW&amp;kxt=https%3A%2F%2Fwww.developer.com&amp;kxcl=cdn&amp;kxp=" style="display: none; visibility: hidden; height: 0; width: 0;"></iframe>
<iframe id="kx-proxy-JdOfGRZW" src="https://cdn.krxd.net/partnerjs/xdi/proxy.3d2100fd7107262ecb55ce6847f01fa5.html#!kxcid=JdOfGRZW&amp;kxt=https%3A%2F%2Fwww.developer.com&amp;kxcl=cdn&amp;kxp=" style="display: none; visibility: hidden; height: 0; width: 0;"></iframe>
<iframe id="kx-proxy-JdOfGRZW" src="https://cdn.krxd.net/partnerjs/xdi/proxy.3d2100fd7107262ecb55ce6847f01fa5.html#!kxcid=JdOfGRZW&amp;kxt=https%3A%2F%2Fwww.developer.com&amp;kxcl=cdn&amp;kxp=" style="display: none; visibility: hidden; height: 0; width: 0;"></iframe>
a: 0.011962890625msa: 0.011962890625msa: 0.011962890625msa: 0.011962890625msa: 0.011962890625msa: 0.011962890625msa: 0.011962890625msa: 0.011962890625ms
 :w```~~Alpha321275
   83213.43424.4.2.4432343423493483492343990200499992+=293920382942104Alpha
   "token"= :w```~~Alpha321275
   83213.43424.4.2.4432343423493483492343990200499992+=293920382942104Alpha :w```~~Alpha321275
   83213.43424.4.2.4432343423493483492343990200499992+=293920382942104Alpha :w```~~Alpha321275
   83213.43424.4.2.4432343423493483492343990200499992+=293920382942104Alpha :w```~~Alpha321275
   83213.43424.4.2.4432343423493483492343990200499992+=293920382942104Alpha
   "prefix": "-"
"name": "Alpha"

import java.io.*;
import java.awt.*;
import java.awt.datatransfer.*;
import java.awt.event.*;


public class ClipMe extends Frame 
 implements ActionListener {

  private TextField tf;
  private TextArea ta;

  public static void main(String[] args) {
    new ClipMe().show();
  }

  public ClipMe() {

    super("Clipping Example");
    add(tf = new TextField("Welcome"), "North");
    add(ta = new TextArea(), "Center");
    MenuBar mb = new MenuBar();
    mb.add(makeEditMenu());
    setMenuBar(mb);
    setSize(250, 250);
   
  }

     
  private Menu makeEditMenu() {

    Menu editMenu = new Menu("Edit");
    MenuItem mi = new MenuItem("Cut");
    mi.addActionListener(this);
    editMenu.add(mi);
    mi = new MenuItem("Copy");
    mi.addActionListener(this);
    editMenu.add(mi);
    mi = new MenuItem("Paste");
    mi.addActionListener(this);
    editMenu.add(mi);
    mi = new MenuItem("Clear");
    mi.addActionListener(this);
    editMenu.add(mi);

    return editMenu;

  }


  public void actionPerformed(ActionEvent evt) {

    Clipboard clipboard = getToolkit().getSystemClipboard();
    String cmd = evt.getActionCommand();
    if (cmd.equalsIgnoreCase("copy")) {
       StringSelection data = new StringSelection(tf.getText());
       clipboard.setContents(data, data);
    }
    else if (cmd.equalsIgnoreCase("clear")) {
      tf.setText("");
    } 
    else if (cmd.equalsIgnoreCase("paste")) {
      Transferable clipData = clipboard.getContents(this);
      String s;
      try {
        s = (String) (clipData.getTransferData(DataFlavor.stringFlavor));
      } 
      catch (Exception ex) {
        s = ex.toString();
      }
      ta.setText(s);
    }
    else if (cmd.equalsIgnoreCase("cut")) {
       StringSelection data = new StringSelection(tf.getText());
       clipboard.setContents(data, data);
       tf.setText("");
    }

  }

}
import java.util.Scanner;
import java.io.File;
import java.io.IOException;
public class DoPayroll {
    public static void main(String args[])
                                  throws IOException {
        Scanner diskScanner =
            new Scanner(new File("EmployeeInfo.txt"));
        for (int empNum = 1; empNum <= 3; empNum++) {
            payOneEmployee(diskScanner);
        }
        diskScanner.close();
    }
    static void payOneEmployee(Scanner aScanner) {
        Employee anEmployee = new Employee();
        anEmployee.setName(aScanner.nextLine());
        anEmployee.setJobTitle(aScanner.nextLine());
        anEmployee.cutCheck(aScanner.nextDouble());
        aScanner.nextLine();
    }/*
 * The pattern in Listing 8-2
 */
import java.util.Scanner;
import java.io.File;
import java.io.IOException;
class SomeClassName {
    public static void main(String args[]) 
                                  throws IOException {
        Scanner scannerName =
            new Scanner(new File("SomeFileName"));
        //Some code goes here
        scannerName.nextInt();
        scannerName.nextDouble();
        scannerName.next();
        scannerName.nextLine();
        //Some code goes here
        scannerName.close();
    }
/*
 * The pattern in Listing 8-2
 */
import java.util.Scanner;
import java.io.File;
import java.io.IOException;
class SomeClassName {
    public static void main(String args[]) 
                                  throws IOException {
        Scanner scannerName =
            new Scanner(new File("SomeFileName"));
        //Some code goes here
        scannerName.nextInt();
        scannerName.nextDouble();
        scannerName.next();
        scannerName.nextLine();
        //Some code goes here
        scannerName.close();
    }
<STYLE type="text;css">
.calcBtn
{
font-weight : bold/
width: 32px;
height: 32px;
}
</style>
<script language="JavaScript">
function Calculator_OnClick(keyStr)
{
var resultsField = document.calculator.calcResults;
switch (keyStr)
{
case "0":
case "1":
case "2":
case "3":
case "4":
case "5":
case "6":
case "7":
case "8":
case "9":
case "0":
case ".":
if ((this.lastOp==this.opClear) || (this.lastOp==this.opOperator))
{
resultsField.value = keyStr;
}
else
{
// ignore extra decimals
if ((keyStr!=".") || (resultsField.value.indexOf(".")<0))
{
resultsField.value += keyStr;
}
}
this.lastOp = this.opNumber;
break;
case "*":
case "/":
case "+":
case "-":
if (this.lastOp==this.opNumber)
this.Calc();
this.evalStr += resultsField.value + keyStr;
this.lastOp = this.opOperator;
break;
case "=":
this.Calc();
this.lastOp = this.opClear;
break;
case "c":
resultsField.value = "0";
this.lastOp = this.opClear;
break;
default:
alert("'" + keyStr + "' not recognized.");
}
}
function Calculator_Calc()
{
var resultsField = document.calculator.calcResults;
//alert("eval:"+this.evalStr+resultsField.value);
resultsField.value = eval(this.evalStr+resultsField.value);
this.evalStr = "";
}
function Calculator()
{
this.evalStr = "";
this.opNumber = 0;
this.opOperator = 1;
this.opClear = 2;
this.lastOp = this.opClear;
this.OnClick = Calculator_OnClick;
this.Calc = Calculator_Calc;
}
gCalculator = new Calculator();
</script>
-------------------------------------------------------------------------------
<form name="calculator">
<table border="2" cellpadding="4" cellspacing="0" bordercolor="#000000">
<tr>
<td>
<table border="0" cellpadding="2" cellspacing="0" width="100%">
<tr>
<td colspan="4">
<input type="text" name="calcResults" value="0" size="20" style="text-align: right"></td>
</tr>
<tr>
<td><input class="calcBtn" type="button" value=" C " name="calclear" onclick="gCalculator.OnClick('c')"></td>
<td></td>
<td> </td>
<td><input class="calcBtn" type="button" value=" = " name="calequal" onclick="gCalculator.OnClick('=')"></td>
</tr>
<tr>
<td><input class="calcBtn" type="button" value=" 7 " name="cal7" onclick="gCalculator.OnClick('7')" ondblclick="gCalculator.OnClick('7')"></td>
<td><input class="calcBtn" type="button" value=" 8 " name="cal8" onclick="gCalculator.OnClick('8')" ondblclick="gCalculator.OnClick('8')"> </td>
<td><input class="calcBtn" type="button" value=" 9 " name="cal9" onclick="gCalculator.OnClick('9')" ondblclick="gCalculator.OnClick('9')"> </td>
<td><input class="calcBtn" type="button" value=" / " name="caldiv" onclick="gCalculator.OnClick('/')"></td>
</tr>
<tr>
<td><input class="calcBtn" type="button" value=" 4 " name="cal4" onclick="gCalculator.OnClick('4')" ondblclick="gCalculator.OnClick('4')"> </td>
<td><input class="calcBtn" type="button" value=" 5 " name="cal5" onclick="gCalculator.OnClick('5')" ondblclick="gCalculator.OnClick('5')"> </td>
<td><input class="calcBtn" type="button" value=" 6 " name="cal6" onclick="gCalculator.OnClick('6')" ondblclick="gCalculator.OnClick('6')"> </td>
<td><input class="calcBtn" type="button" value=" * " name="calmul" onclick="gCalculator.OnClick('*')"></td>
</tr>
<tr>
<td><input class="calcBtn" type="button" value=" 1 " name="cal1" onclick="gCalculator.OnClick('1')" ondblclick="gCalculator.OnClick('1')"> </td>
<td><input class="calcBtn" type="button" value=" 2 " name="cal2" onclick="gCalculator.OnClick('2')" ondblclick="gCalculator.OnClick('2')"> </td>
<td><input class="calcBtn" type="button" value=" 3 " name="cal3" onclick="gCalculator.OnClick('3')" ondblclick="gCalculator.OnClick('3')"> </td>
<td><input class="calcBtn" type="button" value=" + " name="calplus" onclick="gCalculator.OnClick('+')"></td>
</tr>
<tr>
<td> </td>
<td><input class="calcBtn" type="button" value=" 0 " name="cal0" onclick="gCalculator.OnClick('0')" ondblclick="gCalculator.OnClick('0')"> </td>
<td><input class="calcBtn" type="button" value=" . " name="caldec" onclick="gCalculator.OnClick('.')"></td>
<td><input class="calcBtn" type="button" value=" - " name="calminus" onclick="gCalculator.OnClick('-')"></td>
</tr>
</table>
</td>
</tr>
</table>
</form>

article, aside, details, figcaption, figure, footer, header, main, menu, nav, section {
    display: block;
}
* {
    box-sizing: border-box;
}
user agent stylesheet
main {
    display: block;
}
body {
    word-wrap: break-word;
}
body {
    font-family: -apple-system,BlinkMacSystemFont,Segoe UI,Helvetica,Arial,sans-serif,Apple Color Emoji,Segoe UI Emoji;
    font-size: 14px;
    line-height: 1.5;
    color: #24292e;
    background-color: #fff;
}

html {
    font-family: sans-serif;
    -ms-text-size-adjust: 100%;
    -webkit-text-size-adjust: 100%;
}
user agent stylesheet
html {
    color: -internal-root-color;
     public String  getMimeType()
 public Class   getRepresentationClass()
 public String  getHumanPresentableName()
 public void    setHumanPresentableName(String humanPresentableName)
 public boolean equals(DataFlavor dataFlavor)
 public boolean isMimeTypeEqual(String mimeType)
 public final boolean isMimeTypeEqual(DataFlavor dataFlavor)
   element.style {
}
.page-template .site-main, .post-template .site-main {
    padding-bottom: 4vw;
    background: #fff;
}
.outer {
    position: relative;
    padding: 0 4vw;
}
.site-main {
    z-index: 12;
    -ms-flex-positive: 1;
    flex-grow: 1;
    margin-top: 80px;
}
*, *:before, *:after {
    box-sizing: inherit;
}
*, :after, :before {
    box-sizing: inherit;
}
user agent stylesheet
main {
    display: block;
}
html, body, div, span, applet, object, iframe, h1, h2, h3, h4, h5, h6, p, blockquote, pre, a, abbr, acronym, address, big, cite, code, del, dfn, em, img, ins, kbd, q, s, samp, small, strike, strong, sub, sup, tt, var, dl, dt, dd, ol, ul, li, fieldset, form, label, legend, table, caption, tbody, tfoot, thead, tr, th, td, article, aside, canvas, details, embed, figure, figcaption, footer, header, hgroup, menu, nav, output, ruby, section, summary, time, mark, audio, video {
    margin: 0;
    padding: 0;
    border: 0;
    font: inherit;
    font-size: 100%;
    vertical-align: baseline;
}
a, abbr, acronym, address, applet, article, aside, audio, big, blockquote, body, canvas, caption, cite, code, dd, del, details, dfn, div, dl, dt, em, embed, fieldset, figcaption, figure, footer, form, h1, h2, h3, h4, h5, h6, header, hgroup, html, iframe, img, ins, kbd, label, legend, li, mark, menu, nav, object, ol, output, p, pre, q, ruby, s, samp, section, small, span, strike, strong, sub, summary, sup, table, tbody, td, tfoot, th, thead, time, tr, tt, ul, var, video {
    margin: 0;
    padding: 0;
    border: 0;
    font: inherit;
    font-size: 100%;
    vertical-align: baseline;
}
body {
    overflow-x: hidden;
    color: var(--gray90);
    font-family: "Lato", sans-serif;
    font-size: 1.5rem;
    line-height: 1.6em;
    font-weight: 400;
    font-style: normal;
    letter-spacing: 0;
    text-rendering: optimizeLegibility;
    background: #fff;
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
    -moz-font-feature-settings: "liga" on;
    font-feature-settings: "liga1" on;
}
body {
    line-height: 1;
}
body {
    color: #0a0a23;
    font-family: Lato,sans-serif;
    font-size: 1.5rem;
    line-height: 1.6em;
    font-weight: 400;
    font-style: normal;
    letter-spacing: 0;
    text-rendering: optimizeLegibility;
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
    font-feature-settings: "liga1" on;
}
body {
    line-height: 1;
}
:root {
    --dark-blue: #002ead;
    --theme-color: #0a0a23;
    --gray90: #0a0a23;
    --gray85: #1b1b32;
    --gray80: #2a2a40;
    --gray75: #3b3b4f;
    --gray15: #d0d0d5;
    --gray10: #dfdfe2;
    --gray05: #eeeef0;
    --gray00: #fff;
    --header-height: 38px;
}
html {
    overflow-x: hidden;
    overflow-y: scroll;
    font-size: 62.5%;
    -webkit-tap-highlight-color: rgba(0, 0, 0, 0);
}
html {
    box-sizing: border-box;
    font-family: "Lato", sans-serif;
    -ms-text-size-adjust: 100%;
    -webkit-text-size-adjust: 100%;
}
html {
    overflow-y: scroll;
    font-size: 62.5%;
    -webkit-tap-highlight-color: rgba(0,0,0,0);
}
html {
    box-sizing: border-box;
    font-family: Lato,sans-serif;
    -ms-text-size-adjust: 100%;
    -webkit-text-size-adjust: 100%;
}
user agent stylesheet
html {
    color: -internal-root-color;
}
*, *:before, *:after {
    box-sizing: inherit;
}
*, :after, :before {
    box-sizing: inherit;
}
*, *:before, *:after {
    box-sizing: inherit;
}
*, :after, :before {
    box-sizing: inherit;
}
::selection {
    text-shadow: none;
    background: var(--dark-blue);
    color: var(--gray00);
}
::selection {
    text-shadow: none;
    background: #002ead;
    color: #fff;
}
import java.awt.datatransfer.Clipboard;
import java.awt.datatransfer.ClipboardOwner;
import java.awt.datatransfer.Transferable;
import java.awt.datatransfer.StringSelection;
import java.awt.datatransfer.DataFlavor;
import java.awt.datatransfer.UnsupportedFlavorException;
import java.awt.Toolkit;
import java.io.*;

public final class TextTransfer implements ClipboardOwner {

  /** Simple test harness. */
  public static void main(String...  args){
    TextTransfer textTransfer = new TextTransfer();

    //display what is currently on the clipboard
    log("Clipboard contains:" + textTransfer.getClipboardContents());

    //change the contents and then re-display
    textTransfer.setClipboardContents("blah, blah, blah");
    log("Clipboard contains:" + textTransfer.getClipboardContents());
  }

   /**
   * Empty implementation of the ClipboardOwner interface.
   */
   @Override public void lostOwnership(Clipboard clipboard, Transferable contents){
     //do nothing
   }

  /**
  * Place a String on the clipboard, and make this class the
  * owner of the Clipboard's contents.
  */
  public void setClipboardContents(String string){
    StringSelection stringSelection = new StringSelection(string);
    Clipboard clipboard = Toolkit.getDefaultToolkit().getSystemClipboard();
    clipboard.setContents(stringSelection, this);
  }

  /**
  * Get the String residing on the clipboard.
  *
  * @return any text found on the Clipboard; if none found, return an
  * empty String.
  */
  public String getClipboardContents() {
    String result = "";
    Clipboard clipboard = Toolkit.getDefaultToolkit().getSystemClipboard();
    //odd: the Object param of getContents is not currently used
    Transferable contents = clipboard.getContents(null);
    boolean hasTransferableText =
      (contents != null) &&
      contents.isDataFlavorSupported(DataFlavor.stringFlavor)
    ;
    if (hasTransferableText) {
      try {
        result = (String)contents.getTransferData(DataFlavor.stringFlavor);
      }
      catch (UnsupportedFlavorException | IOException ex){
        System.out.println(ex);
        ex.printStackTrace();
      }
    }
    return result;
  }
  
  private static void log(String msg) {
    System.out.println(msg);
  }
} 
:
>java -cp . TextTransfer
Clipboard contains:Java 

Clipboard contains:


>
Clipboard clipboard=Toolkit
   .getDefaultToolkit().getSystemClipboard();
System clipboard
Toolkit toolkit=Toolkit.getDefaultToolkit();Toolkit toolkit=Toolkit.getDefaultToolkit();
Toolkit toolkit=Toolkit.getDefaultToolkit();
Toolkit toolkit=Toolkit.getDefaultToolkit();
void setContents(Transferable contents,
   ClipboardOwner owner)
Transferable getContents(Object requestor)
<iframe id="kx-proxy-JdOfGRZW" src="https://cdn.krxd.net/partnerjs/xdi/proxy.3d2100fd7107262ecb55ce6847f01fa5.html#!kxcid=JdOfGRZW&amp;kxt=https%3A%2F%2Fwww.developer.com&amp;kxcl=cdn&amp;kxp=" style="display: none; visibility: hidden; height: 0; width: 0;"></iframe>
<iframe scrolling="no" frameborder="0" allowtransparency="true" src="https://platform.twitter.com/widgets/widget_iframe.2d991e3dfc9abb2549972ce8b64c5d85.html?origin=https%3A%2F%2Fwww.developer.com" title="Twitter settings iframe" style="display: none;"></iframe>
<iframe id="kx-proxy-JdOfGRZW" src="https://cdn.krxd.net/partnerjs/xdi/proxy.3d2100fd7107262ecb55ce6847f01fa5.html#!kxcid=JdOfGRZW&amp;kxt=https%3A%2F%2Fwww.developer.com&amp;kxcl=cdn&amp;kxp=" style="display: none; visibility: hidden; height: 0; width: 0;"></iframe>
<iframe id="kx-proxy-JdOfGRZW" src="https://cdn.krxd.net/partnerjs/xdi/proxy.3d2100fd7107262ecb55ce6847f01fa5.html#!kxcid=JdOfGRZW&amp;kxt=https%3A%2F%2Fwww.developer.com&amp;kxcl=cdn&amp;kxp=" style="display: none; visibility: hidden; height: 0; width: 0;"></iframe>
<iframe id="kx-proxy-JdOfGRZW" src="https://cdn.krxd.net/partnerjs/xdi/proxy.3d2100fd7107262ecb55ce6847f01fa5.html#!kxcid=JdOfGRZW&amp;kxt=https%3A%2F%2Fwww.developer.com&amp;kxcl=cdn&amp;kxp=" style="display: none; visibility: hidden; height: 0; width: 0;"></iframe>
a: 0.011962890625msa: 0.011962890625msa: 0.011962890625msa: 0.011962890625msa: 0.011962890625msa: 0.011962890625msa: 0.011962890625msa: 0.011962890625ms
 :w```~~Alpha321275
   83213.43424.4.2.4432343423493483492343990200499992+=293920382942104Alpha
   "token"= :w```~~Alpha321275
   83213.43424.4.2.4432343423493483492343990200499992+=293920382942104Alpha :w```~~Alpha321275
   83213.43424.4.2.4432343423493483492343990200499992+=293920382942104Alpha :w```~~Alpha321275
   83213.43424.4.2.4432343423493483492343990200499992+=293920382942104Alpha :w```~~Alpha321275
   83213.43424.4.2.4432343423493483492343990200499992+=293920382942104Alpha
   
    //display what is currently on the clipboard
    log("Clipboard contains:" + textTransfer.getClipboardContents());

    //change the contents and then re-display
    textTransfer.setClipboardContents("blah, blah, blah");
    log("Clipboard contains:" + textTransfer.getClipboardContents());
  }

   /**
   * Empty implementation of the ClipboardOwner interface.
   */
   @Override public void lostOwnership(Clipboard clipboard, Transferable contents){
     //do nothing
   }

  /**
  * Place a String on the clipboard, and make this class the
  * owner of the Clipboard's contents.
  */
  public void setClipboardContents(String string){
    StringSelection stringSelection = new StringSelection(string);
    Clipboard clipboard = Toolkit.getDefaultToolkit().getSystemClipboard();
    clipboard.setContents(stringSelection, this);
  }

  /**
  * Get the String residing on the clipboard.
  *
  * @return any text found on the Clipboard; if none found, return an
  * empty String.
  */
  public String getClipboardContents() {
    String result = "";
    Clipboard clipboard = Toolkit.getDefaultToolkit().getSystemClipboard();
    //odd: the Object param of getContents is not currently used
    Transferable contents = clipboard.getContents(null);
    boolean hasTransferableText =
      (contents != null) &&
      contents.isDataFlavorSupported(DataFlavor.stringFlavor)
    ;
    if (hasTransferableText) {
      try {
        result = (String)contents.getTransferData(DataFlavor.stringFlavor);
      }
      catch (UnsupportedFlavorException | IOException ex){
        System.out.println(ex);
        ex.printStackTrace();
      }
    }
    return result;
  }
  
  private static void log(String msg) {
    System.out.println(msg);
  }
} 
:
>java -cp . TextTransfer
Clipboard contains:Java 

Clipboard contains:


>
Clipboard clipboard=Toolkit
   .getDefaultToolkit().getSystemClipboard();
System clipboard
Toolkit toolkit=Toolkit.getDefaultToolkit();Toolkit toolkit=Toolkit.getDefaultToolkit();
Toolkit toolkit=Toolkit.getDefaultToolkit();
Toolkit toolkit=Toolkit.getDefaultToolkit();
void setContents(Transferable contents,
   ClipboardOwner owner)
Transferable getContents(Object requestor)
<iframe id="kx-proxy-JdOfGRZW" src="https://cdn.krxd.net/partnerjs/xdi/proxy.3d2100fd7107262ecb55ce6847f01fa5.html#!kxcid=JdOfGRZW&amp;kxt=https%3A%2F%2Fwww.developer.com&amp;kxcl=cdn&amp;kxp=" style="display: none; visibility: hidden; height: 0; width: 0;"></iframe>
<iframe scrolling="no" frameborder="0" allowtransparency="true" src="https://platform.twitter.com/widgets/widget_iframe.2d991e3dfc9abb2549972ce8b64c5d85.html?origin=https%3A%2F%2Fwww.developer.com" title="Twitter settings iframe" style="display: none;"></iframe>
<iframe id="kx-proxy-JdOfGRZW" src="https://cdn.krxd.net/partnerjs/xdi/proxy.3d2100fd7107262ecb55ce6847f01fa5.html#!kxcid=JdOfGRZW&amp;kxt=https%3A%2F%2Fwww.developer.com&amp;kxcl=cdn&amp;kxp=" style="display: none; visibility: hidden; height: 0; width: 0;"></iframe>
<iframe id="kx-proxy-JdOfGRZW" src="https://cdn.krxd.net/partnerjs/xdi/proxy.3d2100fd7107262ecb55ce6847f01fa5.html#!kxcid=JdOfGRZW&amp;kxt=https%3A%2F%2Fwww.developer.com&amp;kxcl=cdn&amp;kxp=" style="display: none; visibility: hidden; height: 0; width: 0;"></iframe>
<iframe id="kx-proxy-JdOfGRZW" src="https://cdn.krxd.net/partnerjs/xdi/proxy.3d2100fd7107262ecb55ce6847f01fa5.html#!kxcid=JdOfGRZW&amp;kxt=https%3A%2F%2Fwww.developer.com&amp;kxcl=cdn&amp;kxp=" style="display: none; visibility: hidden; height: 0; width: 0;"></iframe>
a: 0.011962890625msa: 0.011962890625msa: 0.011962890625msa: 0.011962890625msa: 0.011962890625msa: 0.011962890625msa: 0.011962890625msa: 0.011962890625ms
 :w```~~Alpha321275
 HPEN hhi = CreatePen(0, 0, MAKE_PALETTERGB(crHighlight));
HPEN hsh = CreatePen(0, 0, MAKE_PALETTERGB(crShadow));
...
if(fNormal)
  hOld = SelectObject(hdc, hhi);
else
  hOld = SelectObject(hdc, hhi);
...HPEN hhi = CreatePen(0, 0, MAKE_PALETTERGB(crHighlight));
HPEN hsh = CreatePen(0, 0, MAKE_PALETTERGB(crShadow));
...
if(fNormal)
  hOld = SelectObject(hdc, hhi);
else
  hOld = SelectObject(hdc, hhi);
...HPEN hhi = CreatePen(0, 0, MAKE_PALETTERGB(crHighlight));
HPEN hsh = CreatePen(0, 0, MAKE_PALETTERGB(crShadow));
...
if(fNormal)
  hOld = SelectObject(hdc, hhi);
else
  hOld = SelectObject(hdc, hhi);
...fhead[11] = '\0';
fhead[12] = '\0';
fhead[13] = '\0';
fhead[13] = '\0';fhead[11] = '\0';
fhead[12] = '\0';
fhead[13] = '\0';
fhead[13] = '\0';fhead[11] = '\0';
fhead[12] = '\0';
fhead[13] = '\0';
fhead[13] = '\0';
4291=yaxis"-38=+Alpha][2010021]"Token"=fhead[11] = '\0';
fhead[12] = '\0';
fhead[13] = '\0';
fhead[13] = '\0';
element.style {
}
@media screen and (max-width: 1023px)
<style>
.reset-3c756112--card-b6ff88e2--whiteCard-fff091a4--card-5e635eb5--S400Vertical-a18add7e {
    flex-wrap: wrap;
    -webkit-box-lines: multiple;
}
<style>
.reset-3c756112--card-b6ff88e2--whiteCard-fff091a4--card-5e635eb5--S400Vertical-a18add7e {
    display: -webkit-box;
    display: -moz-box;
    display: -ms-flexbox;
    display: -webkit-flex;
    color: #242A31;
    border: 1px solid #E6ECF1;
    margin: 0;
    display: flex;
    padding: 0;
    position: relative;
    align-self: stretch;
    box-shadow: 0 3px 8px 0 rgba(116, 129, 141, 0.1);
    margin-top: 32px;
    transition: border 250ms ease;
    align-items: center;
    justify-self: stretch;
    border-radius: 3px;
    margin-bottom: 32px;
    flex-direction: row;
    -moz-transition: border 250ms ease;
    text-decoration: none;
    background-color: #FFFFFF;
    -webkit-box-align: center;
    -ms-grid-row-align: stretch;
    -webkit-box-orient: horizontal;
    -webkit-transition: border 250ms ease;
    -ms-grid-column-align: stretch;
    -webkit-box-direction: normal;
}
<style>
*, *:before, *:after {
    outline: none;
    box-sizing: inherit;
}
user agent stylesheet
a:-webkit-any-link {
    color: -webkit-link;
    cursor: pointer;
    text-decoration: underline;
}
Style Attribute {
    outline: none;
    white-space: pre-wrap;
    word-wrap: break-word;
}
<style>
.reset-3c756112--pageBody-a91db4ac {
    display: -webkit-box;
    display: -moz-box;
    display: -ms-flexbox;
    display: -webkit-flex;
    margin: 0;
    display: flex;
    padding: 0;
    position: relative;
    font-size: 16px;
    flex-direction: column;
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
}
<style>
.reset-3c756112--wholeContent-2277d1e8 {
    display: -webkit-box;
    display: -moz-box;
    display: -ms-flexbox;
    display: -webkit-flex;
    flex: 1 1 auto;
    margin: 0;
    display: flex;
    padding: 0;
    max-width: 100%;
    min-width: 0;
    background: #fff;
    flex-direction: column;
    padding-bottom: 64px;
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
}
<style>
.reset-3c756112--wholeContent-9fc567d4 {
    display: -webkit-box;
    display: -moz-box;
    display: -ms-flexbox;
    display: -webkit-flex;
    width: 100%;
    margin: 0;
    display: flex;
    padding: 0;
    position: relative;
    min-height: 100%;
    flex-direction: column;
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
}
<style>
.reset-3c756112--bodyContent-2f98451b {
    display: -webkit-box;
    display: -moz-box;
    display: -ms-flexbox;
    display: -webkit-flex;
    flex: 1;
    color: #3B454E;
    width: 100%;
    margin: 0 auto;
    display: flex;
    padding: 0;
}
<style>
.reset-3c756112--body-68cac36c {
    display: -webkit-box;
    display: -moz-box;
    display: -ms-flexbox;
    display: -webkit-flex;
    color: #242A31;
    width: 100%;
    margin: 0;
    display: flex;
    padding: 0;
    background: #F5F7F9;
    min-height: 100vh;
    flex-direction: column;
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
}
<style>
html, body {
    color: #242A31;
    width: 100%;
    height: 100%;
    margin: 0;
    padding: 0;
    font-size: 15px;
    background: #F5F7F9;
    box-sizing: border-box;
    font-family: "Roboto", sans-serif;
    line-height: 1em;
    font-smoothing: antialiased;
    text-size-adjust: 100%;
    -ms-text-size-adjust: 100%;
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
    -webkit-text-size-adjust: 100%;
}
user agent stylesheet
html {
    color: -internal-root-color;
}
<style>
*, *:before, *:after {
    outline: none;
    box-sizing: inherit;
}
<style>
*, *:before, *:after {
    outline: none;
    box-sizing: inherit;
}
Sticky-f53dafd2 {
    display: -webkit-box;
    display: -moz-box;
    display: -ms-flexbox;
    display: -webkit-flex;
    flex: 1 1 auto;
    margin: 0;
    display: flex;
    padding: 0;
    position: relative;
    min-width: 0;
}
<style>
*, *:before, *:after {
    outline: none;
    box-sizing: inherit;
}
user agent stylesheet
div {
    display: block;
}
<style>
.reset-3c756112--wholeContent-2277d1e8 {
    display: -webkit-box;
    display: -moz-box;
    display: -ms-flexbox;
    display: -webkit-flex;
    flex: 1 1 auto;
    margin: 0;
    display: flex;
    padding: 0;
    max-width: 100%;
    min-width: 0;
    background: #fff;
    flex-direction: column;
    padding-bottom: 64px;
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
}
<style>
.reset-3c756112--wholeContent-9fc567d4 {
    display: -webkit-box;
    display: -moz-box;
    display: -ms-flexbox;
    display: -webkit-flex;
    width: 100%;
    margin: 0;
    display: flex;
    padding: 0;
    position: relative;
    min-height: 100%;
    flex-direction: column;
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
}
<style>
.reset-3c756112--bodyContent-2f98451b {
    display: -webkit-box;
    display: -moz-box;
    display: -ms-flexbox;
    display: -webkit-flex;
    flex: 1;
    color: #3B454E;
    width: 100%;
    margin: 0 auto;
    display: flex;
    padding: 0;
}
<style>
.reset-3c756112--body-68cac36c {
    display: -webkit-box;
    display: -moz-box;
    display: -ms-flexbox;
    display: -webkit-flex;
    color: #242A31;
    width: 100%;
    margin: 0;
    display: flex;
    padding: 0;
    background: #F5F7F9;
    min-height: 100vh;
    flex-direction: column;
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
}
<style>
html, body {
    color: #242A31;
    width: 100%;
    height: 100%;
    margin: 0;
    padding: 0;
    font-size: 15px;
    background: #F5F7F9;
    box-sizing: border-box;
    font-family: "Roboto", sans-serif;
    line-height: 1em;
    font-smoothing: antialiased;
    text-size-adjust: 100%;
    -ms-text-size-adjust: 100%;
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
    -webkit-text-size-adjust: 100%;
}
user agent stylesheet
html {
    color: -internal-root-color;
}
<style>
*, *:before, *:after {
    outline: none;
    box-sizing: inherit;
}
<style>
*, *:before, *:after {
    outline: none;
    box-sizing: inherit;
}
  hat.parent = player.parent
    MoveObjectHere (hat)
    }
<style>
html, body {
    color: #242A31;
    width: 100%;
    height: 100%;
    margin: 0;
    padding: 0;
    font-size: 15px;
    background: #F5F7F9;
    box-sizing: border-box;
    font-family: "Roboto", sans-serif;
    line-height: 1em;
    font-smoothing: antialiased;
    text-size-adjust: 100%;
    -ms-text-size-adjust: 100%;
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
    -webkit-text-size-adjust: 100%;}
<style>
html, body {
    color: #242A31;
    width: 100%;
    height: 100%;
    margin: 0;
    padding: 0;
    font-size: 15px;
    background: #F5F7F9;
    box-sizing: border-box;
    font-family: "Roboto", sans-serif;
    line-height: 1em;
    font-smoothing: antialiased;
    text-size-adjust: 100%;
    -ms-text-size-adjust: 100%;
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
    -webkit-text-size-adjust: 100%;
    <script type="text/javascript">
  window._taboola = window._taboola || [];
  _taboola.push({flush: true});
</script>
element.style {
}
user agent stylesheet
script {
    display: none;
}
body {
    background-color: #f7f7f7;
    font-family: 'Raleway',sans-serif;
}
user agent stylesheet
html {
    color: -internal-root-color;
}
::-webkit-scrollbar {
    width: 8px;
    height: 8px;
}
::-webkit-scrollbar-thumb {
    background-color: #aaa;
    height: 50px;
    outline-offset: -2px;
    outline: 2px solid #fff;
    -webkit-border-radius: 4px;
    border: 2px solid #fff;
}
::-webkit-scrollbar-track-piece {
    background-color: #fff;
    -webkit-border-radius: 0;
}
"Alpha"="02199992120022113382232913481204734386573121824.23928419748212-184092749132740283084793294632047208430000000000000000";--~~Bot
element.style {
}
.premium-form {
    padding-left: 80px;
}
.col, .col-1, .col-10, .col-11, .col-12, .col-2, .col-3, .col-4, .col-5, .col-6, .col-7, .col-8, .col-9, .col-auto, .col-lg, .col-lg-1, .col-lg-10, .col-lg-11, .col-lg-12, .col-lg-2, .col-lg-3, .col-lg-4, .col-lg-5, .col-lg-6, .col-lg-7, .col-lg-8, .col-lg-9, .col-lg-auto, .col-md, .col-md-1, .col-md-10, .col-md-11, .col-md-12, .col-md-2, .col-md-3, .col-md-4, .col-md-5, .col-md-6, .col-md-7, .col-md-8, .col-md-9, .col-md-auto, .col-sm, .col-sm-1, .col-sm-10, .col-sm-11, .col-sm-12, .col-sm-2, .col-sm-3, .col-sm-4, .col-sm-5, .col-sm-6, .col-sm-7, .col-sm-8, .col-sm-9, .col-sm-auto, .col-xl, .col-xl-1, .col-xl-10, .col-xl-11, .col-xl-12, .col-xl-2, .col-xl-3, .col-xl-4, .col-xl-5, .col-xl-6, .col-xl-7, .col-xl-8, .col-xl-9, .col-xl-auto {
    position: relative;
    width: 100%;
    min-height: 1px;
    padding-right: 15px;
    padding-left: 15px;
}
*, ::after, ::before {
    box-sizing: border-box;
}
user agent stylesheet
div {
    display: block;
}
body {
    font-family: 'Ubuntu', sans-serif;
    background-color: #34393e;
}
body {
    margin: 0;
    font-family: -apple-system,BlinkMacSystemFont,"Segoe UI",Roboto,"Helvetica Neue",Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
    font-size: 1rem;
    font-weight: 400;
    line-height: 1.5;
    color: #212529;
    text-align: left;
    background-color: #fff;
}
:root {
    --blue: #007bff;
    --indigo: #6610f2;
    --purple: #6f42c1;
    --pink: #e83e8c;
    --red: #dc3545;
    --orange: #fd7e14;
    --yellow: #ffc107;
    --green: #28a745;
    --teal: #20c997;
    --cyan: #17a2b8;
    --white: #fff;
    --gray: #6c757d;
    --gray-dark: #343a40;
    --primary: #007bff;
    --secondary: #6c757d;
    --success: #28a745;
    --info: #17a2b8;
    --warning: #ffc107;
    --danger: #dc3545;
    --light: #f8f9fa;
    --dark: #343a40;
    --breakpoint-xs: 0;
    --breakpoint-sm: 576px;
    --breakpoint-md: 768px;
    --breakpoint-lg: 992px;
    --breakpoint-xl: 1200px;
    --font-family-sans-serif: -apple-system,BlinkMacSystemFont,"Segoe UI",Roboto,"Helvetica Neue",Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
    --font-family-monospace: SFMono-Regular,Menlo,Monaco,Consolas,"Liberation Mono","Courier New",monospace;
}
html {
    font-family: sans-serif;
    line-height: 1.15;
    -webkit-text-size-adjust: 100%;
    -ms-text-size-adjust: 100%;
    -ms-overflow-style: scrollbar;
    -webkit-tap-highlight-color: transparent;
}
user agent stylesheet
html {
    color: -internal-root-color;
}
*, ::after, ::before {
    box-sizing: border-box;
}
*, ::after, ::before {
    box-sizing: border-box;
}

    Clipboard clipboard = getToolkit().getSystemClipboard();
    String cmd = evt.getActionCommand();
    if (cmd.equalsIgnoreCase("copy")) {
       StringSelection data = new StringSelection(tf.getText());
       clipboard.setContents(data, data);
    }
    else if (cmd.equalsIgnoreCase("clear")) {
      tf.setText("");
    } 
    else if (cmd.equalsIgnoreCase("paste")) {
      Transferable clipData = clipboard.getContents(this);
      String s;
      try {
        s = (String) (clipData.getTransferData(DataFlavor.stringFlavor));
      } 
      catch (Exception ex) {
        s = ex.toString();
      }
      ta.setText(s);
    }
    else if (cmd.equalsIgnoreCase("cut")) {
       StringSelection data = new StringSelection(tf.getText());
       clipboard.setContents(data, data);
       tf.setText("");
    }

  }

}

    Clipboard clipboard = getToolkit().getSystemClipboard();
    String cmd = evt.getActionCommand();
    if (cmd.equalsIgnoreCase("copy")) {
       StringSelection data = new StringSelection(tf.getText());
       clipboard.setContents(data, data);
    }
    else if (cmd.equalsIgnoreCase("clear")) {
      tf.setText("");
    } 
    else if (cmd.equalsIgnoreCase("paste")) {
      Transferable clipData = clipboard.getContents(this);
      String s;
      try {
        s = (String) (clipData.getTransferData(DataFlavor.stringFlavor));
      } 
      catch (Exception ex) {
        s = ex.toString();
      }
      ta.setText(s);
    }
    else if (cmd.equalsIgnoreCase("cut")) {
       StringSelection data = new StringSelection(tf.getText());
       clipboard.setContents(data, data);
       tf.setText("");
    }

  }

}

default:
alert("'" + keyStr + "' not recognized.");
}
}
function Calculator_Calc()
{
var resultsField = document.calculator.calcResults;
//alert("eval:"+this.evalStr+resultsField.value);
resultsField.value = eval(this.evalStr+resultsField.value);
this.evalStr = "";
}
function Calculator()
{
this.evalStr = "";
this.opNumber = 0;
this.opOperator = 1;
this.opClear = 2;
this.lastOp = this.opClear;
this.OnClick = Calculator_OnClick;
this.Calc = Calculator_Calc;
}
gCalculator = new Calculator();
</script>
-------------------------------------------------------------------------------
<form name="calculator">
<table border="2" cellpadding="4" cellspacing="0" bordercolor="#000000">
<tr>
<td>
<table border="0" cellpadding="2" cellspacing="0" width="100%">
<tr>
<td colspan="4">
<input type="text" name="calcResults" value="0" size="20" style="text-align: right"></td>
</tr>
<tr>
<td><input class="calcBtn" type="button" value=" C " name="calclear" onclick="gCalculator.OnClick('c')"></td>
<td></td>
<td> </td>
<td><input class="calcBtn" type="button" value=" = " name="calequal" onclick="gCalculator.OnClick('=')"></td>
</tr>
<tr>
<td><input class="calcBtn" type="button" value=" 7 " name="cal7" onclick="gCalculator.OnClick('7')" ondblclick="gCalculator.OnClick('7')"></td>
<td><input class="calcBtn" type="button" value=" 8 " name="cal8" onclick="gCalculator.OnClick('8')" ondblclick="gCalculator.OnClick('8')"> </td>
<td><input class="calcBtn" type="button" value=" 9 " name="cal9" onclick="gCalculator.OnClick('9')" ondblclick="gCalculator.OnClick('9')"> </td>
<td><input class="calcBtn" type="button" value=" / " name="caldiv" onclick="gCalculator.OnClick('/')"></td>
</tr>
<tr>
<td><input class="calcBtn" type="button" value=" 4 " name="cal4" onclick="gCalculator.OnClick('4')" ondblclick="gCalculator.OnClick('4')"> </td>
<td><input class="calcBtn" type="button" value=" 5 " name="cal5" onclick="gCalculator.OnClick('5')" ondblclick="gCalculator.OnClick('5')"> </td>
<td><input class="calcBtn" type="button" value=" 6 " name="cal6" onclick="gCalculator.OnClick('6')" ondblclick="gCalculator.OnClick('6')"> </td>
<td><input class="calcBtn" type="button" value=" * " name="calmul" onclick="gCalculator.OnClick('*')"></td>
</tr>
13133999""~~~~0dy=x 
element.style {
}
img.yt-img-shadow {
    display: block;
    margin-left: var(--yt-img-margin-left, auto);
    margin-right: var(--yt-img-margin-right, auto);
    max-height: var(--yt-img-max-height, none);
    max-width: var(--yt-img-max-width, 100%);
    border-radius: var(--yt-img-border-radius, none);
}
canvas, caption, center, cite, code, dd, del, dfn, div, dl, dt, em, embed, fieldset, font, form, h1, h2, h3, h4, h5, h6, hr, i, iframe, img, ins, kbd, label, legend, li, menu, object, ol, p, pre, q, s, samp, small, span, strike, strong, sub, sup, table, tbody, td, tfoot, th, thead, tr, tt, u, ul, var {
    margin: 0;
    padding: 0;
    border: 0;
    background: transparent;
}
img[Attributes Style] {
    width: 210px;
}
.yt-simple-endpoint {
    display: inline-block;
    cursor: pointer;
    text-decoration: none;
    color: var(--yt-endpoint-color, var(--yt-spec-text-primary));
}
user agent stylesheet
a:-webkit-any-link {
    color: -webkit-link;
    cursor: pointer;
}
#items.yt-horizontal-list-renderer > *.yt-horizontal-list-renderer {
    padding-right: 4px;
    display: inline-block;
    vertical-align: top;
    white-space: normal;
}
#items.yt-horizontal-list-renderer {
    margin-bottom: var(--ytd-horizontal-list-margin-bottom, 24px);
    transition-duration: 0.15s;
    transition-timing-function: cubic-bezier(0.05, 0.0, 0.0, 1);
    will-change: transform;
    display: inline-block;
    white-space: nowrap;
}
Style Attribute {
    --ytd-thumbnail-height: 302px;
}
ytd-shelf-renderer {
    --yt-icon-disabled-color: var(--yt-icon-active-color);
    display: flex;
    -ms-flex-direction: column;
    -webkit-flex-direction: column;
    flex-direction: column;
}
#page-manager.ytd-app {
    --ytd-toolbar-offset: var(--ytd-masthead-height, 56px);
    overflow-x: auto;
    margin-top: var(--ytd-masthead-height, 56px);
    display: flex;
    -ms-flex: 1 1 0.000000001px;
    -webkit-flex: 1;
    flex: 1;
    -webkit-flex-basis: 0.000000001px;
    flex-basis: 0.000000001px;
}
ytd-app {
    --app-drawer-width: 240px;
    --app-drawer-content-container_-_background-color: var(--yt-main-app-background);
    background: var(--yt-main-app-background);
    display: block;
    left: 0;
    min-height: 100%;
    position: absolute;
    right: 0;
    top: 0;
}
Style Attribute {
    font-size: 10px;
    font-family: Roboto, Arial, sans-serif;
}
html:not(.style-scope) {
    --paper-input-container-shared-input-style_-_color: var(--paper-input-container-input-color, var(--primary-text-color));
    --paper-input-container-shared-input-style_-_vertical-align: var(--paper-input-container-input-align, bottom);
    --paper-input-container-shared-input-style_-_font-family: var(--paper-font-subhead_-_font-family);
    --paper-input-container-shared-input-style_-_-webkit-font-smoothing: var(--paper-font-subhead_-_-webkit-font-smoothing);
    --paper-input-container-shared-input-style_-_font-size: var(--paper-font-subhead_-_font-size);
    --paper-input-container-shared-input-style_-_font-weight: var(--paper-font-subhead_-_font-weight);
    --paper-input-container-shared-input-style_-_line-height: var(--paper-font-subhead_-_line-height);
}
html:not(.style-scope) {
    --paper-font-common-base_-_font-family: 'Roboto', 'Noto', sans-serif;
    --paper-font-common-base_-_-webkit-font-smoothing: antialiased;
    --paper-font-title_-_font-family: var(--paper-font-common-base_-_font-family);
    --paper-font-title_-_-webkit-font-smoothing: var(--paper-font-common-base_-_-webkit-font-smoothing);
    --paper-font-title_-_white-space: nowrap;
    --paper-font-title_-_overflow: hidden;
    --paper-font-title_-_text-overflow: ellipsis;
    --paper-font-title_-_font-size: 20px;
    --paper-font-title_-_font-weight: 500;
    --paper-font-title_-_line-height: 28px;
    --paper-font-subhead_-_font-family: var(--paper-font-common-base_-_font-family);
    --paper-font-subhead_-_-webkit-font-smoothing: var(--paper-font-common-base_-_-webkit-font-smoothing);
    --paper-font-subhead_-_font-size: 16px;
    --paper-font-subhead_-_font-weight: 400;
    --paper-font-subhead_-_line-height: 24px;
    --paper-font-body1_-_font-family: var(--paper-font-common-base_-_font-family);
    --paper-font-body1_-_-webkit-font-smoothing: var(--paper-font-common-base_-_-webkit-font-smoothing);
    --paper-font-body1_-_font-size: 14px;
    --paper-font-body1_-_font-weight: 400;
    --paper-font-body1_-_line-height: 20px;
    --paper-font-caption_-_font-family: var(--paper-font-common-base_-_font-family);
    --paper-font-caption_-_-webkit-font-smoothing: var(--paper-font-common-base_-_-webkit-font-smoothing);
}
html:not(.style-scope) {
    --primary-text-color: #212121;
    --primary-background-color: #ffffff;
    --disabled-text-color: #9b9b9b;
    --divider-color: #dbdbdb;
    --error-color: #dd2c00;
    --primary-color: #3f51b5;
}
html:not(.style-scope) {
    --google-red-500: #db4437;
    --google-blue-500: #4285f4;
    --google-green-500: #0f9d58;
    --google-yellow-500: #f4b400;
    --paper-yellow-a100: #ffff8d;
    --dark-divider-opacity: 0.12;
}
html:not(.style-scope) {
    --shadow-elevation-2dp_-_box-shadow: 0 2px 2px 0 rgba(0, 0, 0, 0.14), 0 1px 5px 0 rgba(0, 0, 0, 0.12), 0 3px 1px -2px rgba(0, 0, 0, 0.2);
    --shadow-elevation-4dp_-_box-shadow: 0 4px 5px 0 rgba(0, 0, 0, 0.14), 0 1px 10px 0 rgba(0, 0, 0, 0.12), 0 2px 4px -1px rgba(0, 0, 0, 0.4);
    --shadow-elevation-6dp_-_box-shadow: 0 6px 10px 0 rgba(0, 0, 0, 0.14), 0 1px 18px 0 rgba(0, 0, 0, 0.12), 0 3px 5px -1px rgba(0, 0, 0, 0.4);
    --shadow-elevation-8dp_-_box-shadow: 0 8px 10px 1px rgba(0, 0, 0, 0.14), 0 3px 14px 2px rgba(0, 0, 0, 0.12), 0 5px 5px -3px rgba(0, 0, 0, 0.4);
    --shadow-elevation-16dp_-_box-shadow: 0 16px 24px 2px rgba(0, 0, 0, 0.14), 0 6px 30px 5px rgba(0, 0, 0, 0.12), 0 8px 10px -5px rgba(0, 0, 0, 0.4);
}
html:not(.style-scope) {
    --layout-horizontal_-_display: flex;
    --layout-horizontal_-_-ms-flex-direction: row;
    --layout-horizontal_-_-webkit-flex-direction: row;
    --layout-horizontal_-_flex-direction: row;
    --layout-end-justified_-_-ms-flex-pack: end;
    --layout-end-justified_-_-webkit-justify-content: flex-end;
    --layout-end-justified_-_justify-content: flex-end;
    --layout-fit_-_position: absolute;
    --layout-fit_-_top: 0;
    --layout-fit_-_right: 0;
    --layout-fit_-_bottom: 0;
    --layout-fit_-_left: 0;
}
html:not(.style-scope) {
   #107516;
    --yt-spec-themed-overlay-background: rgba(255, 255, 255, 0.7);
}
html:not(.style-scope) {
    --t-std-body-300: rgba(0, 0, 0, 0.54);
    --t-std-surface-200: #fafafa;
    --t-std-surface-300: whitesmoke;
    --t-std-surface-400: #ededed;
    --t-primary-color: #111111;
    --t-primary-text-color: #111111;
    --t-hovered-text-color: hsla(0, 0%, 6.7%, 0.8);
    --
user agent stylesheet
html {
    color: -internal-root-color;
}
display: block;
    margin-left: var(--yt-img-margin-left, auto);
    margin-right: var(--yt-img-margin-right, auto);
    max-height: var(--yt-img-max-height, none);
    max-width: var(--yt-img-max-width, 100%);
    border-radius: var(--yt-img-border-radius, none);
}
canvas, caption, center, cite, code, dd, del, dfn, div, dl, dt, em, embed, fieldset, font, form, h1, h2, h3, h4, h5, h6, hr, i, iframe, img, ins, kbd, label, legend, li, menu, object, ol, p, pre, q, s, samp, small, span, strike, strong, sub, sup, table, tbody, td, tfoot, th, thead, tr, tt, u, ul, var {
    margin: 0;
    padding: 0;
    border: 0;
    background: transparent;
}
img[Attributes Style] {
    width: 210px;
}
.yt-simple-endpoint {
    display: inline-block;
    cursor: pointer;
    text-decoration: none;
    color: var(--yt-endpoint-color, var(--yt-spec-text-primary));
}
user agent stylesheet
a:-webkit-any-link {
    color: -webkit-link;
    cursor: pointer;
}
#items.yt-horizontal-list-renderer > *.yt-horizontal-list-renderer {
    padding-right: 4px;
    display: inline-block;
    vertical-align: top;
    white-space: normal;
    --font-family-sans-serif: -apple-system,BlinkMacSystemFont,"Segoe UI",Roboto,"Helvetica Neue",Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
    --font-family-monospace: SFMono-Regular,Menlo,Monaco,Consolas,"Liberation Mono","Courier New",monospace;
}
html {
    font-family: sans-serif;
    line-height: 1.15;
    -webkit-text-size-adjust: 100%;
    -ms-text-size-adjust: 100%;
    -ms-overflow-style: scrollbar;
    -webkit-tap-highlight-color: transparent;
}
user agent stylesheet
html {
    color: -internal-root-color;
}
*, ::after, ::before {
    box-sizing: border-box;
}
*, ::after, ::before {
    box-sizing: border-box;
    "Alpha"; CLIENT ID
"640323853741981721"
[13311.322]= -4310.13
}
    }
  y=axis+ "Alpha";-CLIENT SECRET;8_rvsmQ18bUgn9illnJSiMbInQMffCnf
  }
  x=axis+ "Alpha;-TOKEN;NjQwMzIzODUzNzQxOTgxNzIx.XcHUwg.kRvqKnqZjuq-6GZ-8cjVP6hTSfg
  NjQwMzIzODUzNzQxOTgxNzIx.XcHUwg.kRvqKnqZjuq-6GZ-8cjVP6hTSfg
   }}}a= (893562223.893562223)(949108719.949108719)= {""640323853741981721""){8_rvsmQ18bUgn9illnJSiMbInQMffCnf)
   }
     {
}}     
     {
------------===================____-----33O2O3022424U3H_hjI.net
482047329rewufb4ry2brf84r832jUhuhHHHIHubhj k38y29e9e9jdqwhd8q3ueeu98dswo29__99h
------------===================____-----33O2O3022424U3H_hjI.net
482047329rewufb4ry2brf84r832jUhuhHHHIHubhj k38y29e9e9jdqwhd8q3ueeu98dswo29__99h
------------===================____-----33O2O3022424U3H_hjI.net
482047329rewufb4ry2brf84r832jUhuhHHHIHubhj k38y29e9e9jdqwhd8q3ueeu98dswo29__99h
------------===================____-----33O2O3022424U3H_hjI.net
482047329rewufb4ry2brf84r832jUhuhHHHIHubhj k38y29e9e9jdqwhd8q3ueeu98dswo29__99h
------------===================____-----33O2O3022424U3H_hjI.net
482047329rewufb4ry2brf84r832jUhuhHHHIHubhj k38y29e9e9jdqwhd8q3ueeu98dswo29__99h
------------===================____-----33O2O3022424U3H_hjI.net
482047329rewufb4ry2brf84r832jUhuhHHHIHubhj k38y29e9e9jdqwhd8q3ueeu98dswo29__99h
------------===================____-----33O2O3022424U3H_hjI.net
482047329rewufb4ry2brf84r832jUhuhHHHIHubhj k38y29e9e9jdqwhd8q3ueeu98dswo29__99h
 ------------===================____-----33O2O3022424U3H_hjI.net
482047329rewufb4ry2brf84r832jUhuhHHHIHubhj k38y29e9e9jdqwhd8q3ueeu98dswo29__99h
commandZ-="random" command x""{{{{}}}}
}
469200.3223
"HackerV2
#6853 = "whitelist"
